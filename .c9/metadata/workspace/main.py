{"changed":false,"filter":false,"title":"main.py","tooltip":"/main.py","value":"from room import Room\nfrom player import Player\nfrom item import Item\nfrom item import Key\nfrom monster import Monster\nfrom enter import enter, showStatus\nimport os\nimport updater\n\nplayer = Player()\n\ndef createWorld():\n    r1 = Room(\"Entrance Hall\", \"You are in the Entrance Hall.\", False)\n    r2 = Room(\"Great Hall\", \"You are in the Great Hall.\", False)\n    r3 = Room(\"Trophy Room\", \"You are in trophy room.\", False)\n    r4 = Room(\"Entrance Courtyard\", \"You are in the Entrance Courtyard.\", False)\n    r5 = Room(\"Boat House\", \"You are in the boat house.\", True)\n    r6 = Room(\"Dungeons\", \"You are in the dungeons.\", True)\n    r7 = Room(\"Moving Staircase (Level 1)\", \"You are by the moving staircase (Level 1).\", False)\n    r8 = Room(\"Moving Staircase (Level 2)\", \"You are by the moving staircase (Level 2).\", False)\n    r9 = Room(\"Moving Staircase (Level 3)\", \"You are by the moving staircase (Level 3).\", False)\n    r10 = Room(\"Moving Staircase (Level 4)\", \"You are by the moving staircase (Level 4).\", False)\n    r11 = Room(\"Moving Staircase (Level 5)\", \"You are by the moving staircase (Level 5).\", False)\n    r12 = Room(\"Moving Staircase (Level 6)\", \"You are by the moving staircase (Level 6).\", False)\n    r13 = Room(\"Defense Against the Dark Arts Classroom\", \"You are in the Defense Against the Dark Arts classroom.\", False)\n    r14 = Room(\"Umbridge's Office\", \"You are in Umbridge's office.\", True)\n    r15 = Room(\"Hospital Wing\", \"You are in the hospital wing.\", False)\n    r16 = Room(\"Clock Tower\", \"You are in the clock tower.\", False)\n    r17 = Room(\"Clock Tower Courtyard\", \"You are in the clock tower courtyard.\", False)\n    r18 = Room(\"Stone Circle\", \"You are in the stone circle.\", False)\n    r19 = Room(\"Hagrid's Hut\", \"You are in Hagrid's hut.\", True)\n    r20 = Room(\"Dark Forest\", \"You are in the Dark Forest.\", False)\n    r21 = Room(\"Owlery\", \"You are in the Owlery.\", False)\n    r22 = Room(\"Prefect's Bathroom\", \"You are in the prefect's bathroom.\", False)\n    r23 = Room(\"Room of Rewards\", \"You are in the Room of Rewards.\", False)\n    r24 = Room(\"Divination Classroom\", \"You are in the Divination classroom.\", False)\n    r25 = Room(\"Room of Requirement\", \"You are in the Room of Requirement.\", True)\n    r26 = Room(\"Stone Bridge\", \"You are on the Stone Bridge.\", False)\n    r27 = Room(\"Library\", \"You are in the library.\", False)\n    Room.connectRooms(r1, \"west\", r2, \"east\")\n    Room.connectRooms(r2, \"south\", r3, \"north\")\n    Room.connectRooms(r1, \"east\", r4, \"west\")\n    Room.connectRooms(r4, \"south\", r5, \"north\")\n    Room.connectRooms(r1, \"north\", r7, \"south\")\n    Room.connectRooms(r7, \"downstairs\", r6, \"upstairs\")\n    Room.connectRooms(r7, \"upstairs\", r8, \"downstairs\")\n    Room.connectRooms(r8, \"upstairs\", r9, \"downstairs\")\n    Room.connectRooms(r9, \"upstairs\", r10, \"downstairs\")\n    Room.connectRooms(r10, \"upstairs\", r11, \"downstairs\")\n    Room.connectRooms(r11, \"upstairs\", r12, \"downstairs\")\n    Room.connectRooms(r8, \"east\", r13, \"west\")\n    Room.connectRooms(r13, \"upstairs\", r14, \"downstairs\")\n    Room.connectRooms(r9, \"south\", r15, \"north\")\n    Room.connectRooms(r15, \"west\", r16, \"east\")\n    Room.connectRooms(r16, \"west\", r17, \"east\")\n    Room.connectRooms(r17, \"west\", r18, \"east\")\n    Room.connectRooms(r18, \"south\", r19, \"north\")\n    Room.connectRooms(r19, \"west\", r20, \"east\")\n    Room.connectRooms(r18, \"north\", r21, \"south\")\n    Room.connectRooms(r10, \"west\", r22, \"east\")\n    Room.connectRooms(r11, \"west\", r23, \"east\")\n    Room.connectRooms(r12, \"west\", r24, \"east\")\n    Room.connectRooms(r12, \"north\", r25, \"south\")\n    Room.connectRooms(r7, \"north\", r26, \"south\")\n    i = Item(\"Rock\", \"This is just a rock.\")\n    i2 = Key(\"Magic Key\", \"This is a single-use key that can unlock most doors.\")\n    i.putInRoom(r2, 2)\n    i2.putInRoom(r1, 3)\n    player.location = r1\n    c=Monster(\"Bob the monster\", 20, r2)\n    c.money=5\n\ndef clear():\n    os.system('cls' if os.name == 'nt' else 'clear')\n\ndef printSituation():\n    clear()\n    print(player.location.desc)\n    print()\n    if player.location.hasMonsters():\n        print(\"This room contains the following monsters:\")\n        for m in player.location.monsters:\n            print(m.name)\n        print()\n    if player.location.hasItems():\n        print(\"This room contains the following items:\")\n        player.location.showItems()\n        print()\n    print(\"You can go in the following directions:\")\n    for e in player.location.exitNames():\n        print(e)\n    print()\n\ndef showHelp():\n    clear()\n    print(\"go <direction> -- moves you in the given direction\")\n    print(\"inventory -- opens your inventory\")\n    print(\"pickup <item> -- picks up the item\")\n    print(\"use <item> -- uses the item\")\n    print(\"status -- checks health and mana levels\")\n    print(\"attack <monster name> -- Attacks a monster\")\n    print()\n    enter()\n\ncreateWorld()\nplaying = True\nwhile playing and player.alive:\n    printSituation()\n    commandSuccess = False\n    timePasses = False\n    while not commandSuccess:\n        commandSuccess = True\n        command = input(\"What now? \")\n        commandWords = command.split()\n        if commandWords == []:\n            pass\n        elif commandWords[0].lower() == \"go\":   #cannot handle multi-word directions\n            if commandWords[1].lower() not in player.location.exitNames():\n                print(\"Invalid direction.\")\n                enter()\n                commandSuccess = False\n            else:\n                if player.location.getDestination(commandWords[1]).lock == False: #if room is unlocked\n                    player.goDirection(commandWords[1]) \n                    timePasses = True\n                else: #if room is locked\n                    print(player.location.getDestination(commandWords[1]).name + \" is locked.\")\n                    commandSuccess = False\n        elif commandWords[0].lower() == \"pick\" and commandWords[1].lower() == \"up\":  #can handle multi-word objects\n            targetName = command[8:]\n            target = player.location.getItemByName(targetName)\n            if target != False:\n                if player.location.items.count(target) == 1:\n                    player.pickup(target)\n                    commandSuccess = True\n                else:\n                    try:\n                        quantity = int(input(\"How many? \"))\n                        player.pickup(target, quantity)\n                        commandSuccess = True\n                    except ValueError:\n                        print(\"Not a valid number.\")\n                        commandSuccess = False\n            else:\n                print(\"No such item.\")\n                commandSuccess = False\n        elif commandWords[0].lower() == \"drop\":\n            targetName = command[5:]\n            target = player.getItemByName(targetName)\n            if target != False:\n                if player.items.count(target) == 1:\n                    player.drop(target, 1)\n                    commandSuccess = True\n                else:\n                    try:\n                        quantity = int(input(\"How many? \"))\n                        player.drop(target, quantity)\n                        commandSuccess = True\n                    except:\n                        print(\"Not a valid number.\")\n                        commandSuccess = False\n            else:\n                print(\"No such item.\")\n                commandSuccess = False\n        elif commandWords[0].lower() == \"use\":\n            targetName = command[4:]\n            target = player.getItemByName(targetName)\n            if target in player.items:\n                player.use(target)\n                commandSuccess = True\n            else:\n                print(\"Cannot use.\")\n                commandSuccess = False\n        elif commandWords[0].lower() == \"status\":\n            showStatus()\n        elif commandWords[0].lower() == \"inventory\":\n            player.showInventory()       \n        elif commandWords[0].lower() == \"inspect\":\n            targetName = command[8:]\n            target = player.location.getItemByName(targetName)\n            if target in player.location.items:\n                print(target.desc)\n                enter()\n        elif commandWords[0].lower() == \"help\":\n            showHelp()\n        elif commandWords[0].lower() == \"exit\":\n            playing = False\n        elif commandWords[0].lower() == \"attack\":\n            targetName = command[7:]\n            target = player.location.getMonsterByName(targetName)\n            if target != False:\n                player.attackMonster(target)\n            else:\n                print(\"No such monster.\")\n                commandSuccess = False\n        else:\n            print(\"Not a valid command.\")\n            commandSuccess = False\n    if timePasses == True:\n        updater.updateAll()\n\n    \n\n\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":2116.5,"scrollleft":0,"selection":{"start":{"row":54,"column":47},"end":{"row":54,"column":47},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":150,"state":"start","mode":"ace/mode/python"}},"timestamp":1447975848000}